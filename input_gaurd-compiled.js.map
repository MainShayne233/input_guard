{"version":3,"sources":["input_gaurd.js"],"names":[],"mappings":"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","file":"input_gaurd-compiled.js","sourcesContent":["class InputGaurd{\n\n  constructor(args){\n    this.exclude = args.exclude || [];\n    this.include = args.include || [];\n  }\n\n  watch(id){\n    var helpless_input = document.getElementById(id);\n    helpless_input.addEventListener('keydown', this.badge_check.bind(this));\n  }\n\n  badge_check(event){\n    var badge = event.key;\n    if (this.badge_checks_out(badge)){\n      return true\n    }\n    else{\n      event.preventDefault();\n      return false\n    }\n  }\n\n  badge_checks_out(badge){\n    if (this.is_wanted(badge)){\n      if (this.has_exception(badge)){\n        return true;\n      }\n      else{\n        return false;\n      }\n    }\n    else{\n      return true;\n    }\n  }\n\n  is_wanted(badge){\n    if (this.lockdown_on('all')){ return true; }\n    else if(this.lockdown_on('numbers') && this.suspect_is_a_number(badge)) { return true }\n    else if(this.lockdown_on('letters') && this.suspect_is_a_letter(badge)) { return true }\n    else if(this.lockdown_on('uppercase letters') && this.suspect_is_an_uppercase_letter(badge)) { return true }\n    else if(this.lockdown_on('lowercase letters') && this.suspect_is_a_lowercase_letter(badge)) { return true }\n    else if(this.lockdown_on('functional keys') && this.suspect_is_a_functional_key(badge)) { return true }\n    else if(this.on_watch_list(badge)) { return true }\n    else { return false; }\n  }\n\n  lockdown_on(type){\n    return this.identified(this.exclude, type);\n  }\n\n  amnisty_for(type){\n    return this.identified(this.include, type);\n  }\n\n  amnisty_for_functional_keys(){\n    return !(this.identified(this.exclude, 'functional keys'))\n  }\n\n  on_watch_list(badge){\n    return this.identified(this.exclude, badge);\n  }\n\n  on_guest_list(badge){\n    return this.identified(this.include, badge);\n  }\n\n  has_exception(badge){\n    if (this.amnisty_for('all')){ return true; }\n    else if(this.amnisty_for('numbers') && this.suspect_is_a_number(badge)) { return true }\n    else if(this.amnisty_for('letters') && this.suspect_is_a_letter(badge)) { return true }\n    else if(this.amnisty_for('uppercase letters') && this.suspect_is_an_uppercase_letter(badge)) { return true }\n    else if(this.amnisty_for('lowercase letters') && this.suspect_is_a_lowercase_letter(badge)) { return true }\n    else if(this.amnisty_for_functional_keys() && this.suspect_is_a_functional_key(badge)) { return true }\n    else if(this.on_guest_list(badge)) { return true }\n    else { return false; }\n  }\n\n  suspect_is_a_number(badge){\n    return this.identified(['0','1','2','3','4','5','6','7','8','9'], badge);\n  }\n\n  suspect_is_a_letter(badge){\n    return this.identified([\"a\", \"b\", \"c\", \"d\", \"e\",\n                            \"f\", \"g\", \"h\", \"i\", \"j\",\n                            \"k\", \"l\", \"m\", \"n\", \"o\",\n                            \"p\", \"q\", \"r\", \"s\", \"t\",\n                            \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"], badge.toLowerCase());\n  }\n\n  suspect_is_a_lowercase_letter(badge){\n    return this.identified([\"a\", \"b\", \"c\", \"d\", \"e\",\n                            \"f\", \"g\", \"h\", \"i\", \"j\",\n                            \"k\", \"l\", \"m\", \"n\", \"o\",\n                            \"p\", \"q\", \"r\", \"s\", \"t\",\n                            \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"], badge);\n  }\n\n  suspect_is_an_uppercase_letter(badge){\n    return this.identified([\"A\", \"B\", \"C\", \"D\", \"E\",\n                            \"F\", \"G\", \"H\", \"I\", \"J\",\n                            \"K\", \"L\", \"M\", \"N\", \"O\",\n                            \"P\", \"Q\", \"R\", \"S\", \"T\",\n                            \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"], badge);\n  }\n\n  suspect_is_a_functional_key(badge){\n    return this.identified(['Tab', 'Backspace', ' ', 'Enter', 'ArrowLeft',\n                            'ArrowRight', 'ArrowUp', 'ArrowDown', 'Delete'], badge);\n  }\n\n  identified(line_up, badge){\n    var suspect_count = line_up.length;\n    while (suspect_count--) {\n      if (line_up[suspect_count] === badge) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n}\n\nvar gaurd = new InputGaurd({\n                  exclude: ['all', 'functional keys'],\n                  include: ['uppercase letters']\n                });\n\ngaurd.watch('needs_gaurding');"]}